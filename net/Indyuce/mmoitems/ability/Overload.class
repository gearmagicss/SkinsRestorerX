package net.Indyuce.mmoitems.ability;

import io.lumine.mythic.lib.api.AttackResult;
import io.lumine.mythic.lib.api.DamageType;
import io.lumine.mythic.lib.version.VersionSound;
import net.Indyuce.mmoitems.MMOUtils;
import net.Indyuce.mmoitems.api.ItemAttackResult;
import net.Indyuce.mmoitems.api.ability.Ability;
import net.Indyuce.mmoitems.api.ability.AbilityResult;
import net.Indyuce.mmoitems.api.ability.SimpleAbilityResult;
import net.Indyuce.mmoitems.api.player.PlayerStats;
import net.Indyuce.mmoitems.stat.data.AbilityData;
import org.bukkit.Location;
import org.bukkit.Particle;
import org.bukkit.Sound;
import org.bukkit.entity.Entity;
import org.bukkit.entity.LivingEntity;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;

public class Overload extends Ability {
  public Overload() {
    super(new Ability.CastingMode[] { Ability.CastingMode.ON_HIT, Ability.CastingMode.WHEN_HIT, Ability.CastingMode.LEFT_CLICK, Ability.CastingMode.RIGHT_CLICK, Ability.CastingMode.SHIFT_LEFT_CLICK, Ability.CastingMode.SHIFT_RIGHT_CLICK });
    addModifier("damage", 6.0D);
    addModifier("cooldown", 10.0D);
    addModifier("radius", 6.0D);
    addModifier("mana", 0.0D);
    addModifier("stamina", 0.0D);
  }
  
  public AbilityResult whenRan(PlayerStats.CachedStats paramCachedStats, LivingEntity paramLivingEntity, AbilityData paramAbilityData, ItemAttackResult paramItemAttackResult) {
    return (AbilityResult)new SimpleAbilityResult(paramAbilityData);
  }
  
  public void whenCast(PlayerStats.CachedStats paramCachedStats, AbilityResult paramAbilityResult, ItemAttackResult paramItemAttackResult) {
    double d1 = paramAbilityResult.getModifier("damage");
    double d2 = paramAbilityResult.getModifier("radius");
    paramCachedStats.getPlayer().getWorld().playSound(paramCachedStats.getPlayer().getLocation(), Sound.ENTITY_GENERIC_EXPLODE, 2.0F, 0.0F);
    paramCachedStats.getPlayer().getWorld().playSound(paramCachedStats.getPlayer().getLocation(), VersionSound.ENTITY_FIREWORK_ROCKET_TWINKLE.toSound(), 2.0F, 0.0F);
    paramCachedStats.getPlayer().addPotionEffect(new PotionEffect(PotionEffectType.SLOW, 2, 254));
    for (Entity entity : paramCachedStats.getPlayer().getNearbyEntities(d2, d2, d2)) {
      if (MMOUtils.canDamage(paramCachedStats.getPlayer(), entity))
        (new AttackResult(d1, new DamageType[] { DamageType.SKILL, DamageType.MAGIC })).damage(paramCachedStats.getPlayer(), (LivingEntity)entity); 
    } 
    double d3 = 12.0D + d2 * 2.5D;
    double d4;
    for (d4 = 0.0D; d4 < 6.283185307179586D; d4 += Math.PI / d3) {
      Location location = paramCachedStats.getPlayer().getLocation().clone().add(Math.cos(d4) * d2, 1.0D, Math.sin(d4) * d2);
      paramCachedStats.getPlayer().getWorld().spawnParticle(Particle.CLOUD, location, 4, 0.0D, 0.0D, 0.0D, 0.05D);
      paramCachedStats.getPlayer().getWorld().spawnParticle(Particle.FIREWORKS_SPARK, location, 4, 0.0D, 0.0D, 0.0D, 0.05D);
    } 
  }
}
